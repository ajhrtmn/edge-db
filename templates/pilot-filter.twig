<style>
    select, .zip { margin-bottom: 1rem; }

    .material-icons.md-18 {
        font-size: 1.25rem;
        max-width: max-content;
    }

    #filter-tab {
        position: absolute;
        right: 20px;
        z-index: 200;
    }
    #filter-tab-inner {
        cursor: pointer;
    }
    #filter-tab-inner > * {
        transform: skewX(11deg);
    }
    #filter-selection-list {
        position: static;
        top: 20px;
        max-height: 82vh;
        right: -300px;
        background-color: #ccc;
        width: 300px;
        z-index: 100;
        overflow-y: auto;
        padding: .5rem;
    }
    .title {
        border-bottom: 1px solid #BF021C;
        margin-bottom: .5rem;
    }
</style>

<div id="filter-tab">
    <div id="filter-tab-inner" class="text-sm text-white edge-btn-red diag flex items-center justify-around max-w-max py-2 px-4">
        <div>
            Filters
        </div>
        <span class="material-icons ml-4 md-18">
            arrow_right
        </span>
    </div>
</div>

<div id="filter-selection-list" class="mt-4 flex flex-col gap-2">
    <div id="date-approved" class="">
        <div class="title flex justify-between items-center">
            <div>Date Approved</div>
        </div>
        <select id="date-approved-selection" class="w-11/12 mx-auto">
            <option value="">Select Option</option>
            <option value="2011">2011</option>
            <option value="2012">2012</option>
            <option value="2013">2013</option>
            <option value="2014">2014</option>
            <option value="2015">2015</option>
            <option value="2016">2016</option>
            <option value="2017">2017</option>
            <option value="2018">2018</option>
            <option value="2019">2019</option>
            <option value="2020">2020</option>
            <option value="2021">2021</option>
            <option value="2022">2022</option>
        </select>
    </div>

    <div id="date-closed" class="">
        <div class="title flex justify-between items-center">
            <div>Date Closed</div>
        </div>
        <select id="date-closed-selection" class="w-11/12 mx-auto">
            <option value="">Select Option</option>
            <option value="2011">2011</option>
            <option value="2012">2012</option>
            <option value="2013">2013</option>
            <option value="2014">2014</option>
            <option value="2015">2015</option>
            <option value="2016">2016</option>
            <option value="2017">2017</option>
            <option value="2018">2018</option>
            <option value="2019">2019</option>
            <option value="2020">2020</option>
            <option value="2021">2021</option>
            <option value="2022">2022</option>
        </select>
    </div>

    <div id="project-status" class="">
        <div class="title flex justify-between items-center">
            <div>Project Status</div>
        </div>
        <div class="w-full">
            <select id="project-status-selection" class="w-11/12 mx-auto">
                <option value="">Select Option</option>
                <option value="Approved">Approved</option>
                <option value="Closed">Closed</option>
                <option value="Terminated">Terminated</option>
            </select>
        </div>
    </div>

    <div id="project-type" class="">
        <div class="title flex justify-between items-center">
            <div>Project Type</div>
        </div>
        <div class="w-full">
            <select id="project-type-selection" class="w-11/12 mx-auto">
                <option value="">Select Option</option>
                <option value="Community Builder">Community Builder</option>
                <option value="Destination Retail">Destination Retail</option>
                <option value="Expansion">Expansion</option>
                <option value="Fast Track">Fast Track</option>
                <option value="Jobs">Jobs</option>
                <option value="Residential">Residential</option>
                <option value="Retention">Retention</option>
                <option value="Standard/Basic">Standard/Basic</option>
                <option value="Sewer Management">Sewer Management</option>
            </select>
        </div>
    </div>

    <div id="industry-classification" class="">
        <div class="title flex justify-between items-center">
            <div>Industry Classification</div>
        </div>
        <div class="w-full">
            <select id="industry-classification-selection" class="w-11/12 mx-auto">
                <option value="">Select Option</option>
                <option value="Hotel/Hospitality">Hotel/Hospitality</option>
                <option value="Industrial">Industrial</option>
                <option value="Multifamily">Multifamily</option>
                <option value="HQ/Back Office">HQ/Back Office</option>
                <option value="Retail">Retail</option>
                <option value="Other">Other</option>
            </select>
        </div>
    </div>

    <div id="retained-jobs" class="">
        <div class="title flex justify-between items-center">
            <div>Retained Jobs</div>
        </div>
        <select id="retained-jobs-selection" class="w-11/12 mx-auto">
            <option value="">Select Option</option>
            <option value="1">0-25</option>
            <option value="2">25-100</option>
            <option value="3">100+</option>
        </select>
    </div>

    <div id="new-jobs" class="">
        <div class="title flex justify-between items-center">
            <div>New Jobs</div>
        </div>
        <select id="new-jobs-selection" class="w-11/12 mx-auto">
            <option value="">Select Option</option>
            <option value="1">0-25</option>
            <option value="2">25-100</option>
            <option value="3">100+</option>
        </select>
    </div>

    <div id="total-jobs" class="">
        <div class="title flex justify-between items-center">
            <div>Total Jobs</div>
        </div>
        <select id="total-jobs-selection" class="w-11/12 mx-auto">
            <option value="">Select Option</option>
            <option value="1">0-25</option>
            <option value="2">25-100</option>
            <option value="3">100+</option>
        </select>
    </div>

    <div id="mwbe-losb" class="">
        <div class="title flex justify-between items-center">
            <div>MWBE/LOSB Spending</div>
        </div>
        <select id="mwbe-losb-selection" class="w-11/12 mx-auto">
            <option value="">Select Option</option>
            <option value="1">Up to $1 MIL</option>
            <option value="2">$1 MIL - $5 MIL</option>
            <option value="3">$5 MIL - $10 MIL</option>
            <option value="4">$10 MIL - $20 MIL</option>
            <option value="5">$20 MIL +</option>
        </select>
    </div>

    <div id="payroll-new" class="">
        <div class="title flex justify-between items-center">
            <div>Average Payroll of New Jobs</div>
        </div>
        <select id="payroll-new-selection" class="w-11/12 mx-auto">
            <option value="">Select Option</option>
            <option value="1">$20k - $30k</option>
            <option value="2">$30k - $60k</option>
            <option value="3">$60k +</option>
        </select>
    </div>

    <div id="payroll-retained" class="">
        <div class="title flex justify-between items-center">
            <div>Average Payroll of Retained Jobs</div>
        </div>
        <select id="payroll-retained-selection" class="w-11/12 mx-auto">
            <option value="">Select Option</option>
            <option value="1">$20k - $30k</option>
            <option value="2">$30k - $60k</option>
            <option value="3">$60k +</option>
        </select>
    </div>

    <div id="projected-investment" class="">
        <div class="title flex justify-between items-center">
            <div>Projected Investment</div>
        </div>
        <select id="projected-investment-selection" class="w-11/12 mx-auto">
            <option value="">Select Option</option>
            <option value="1">Up to $1 MIL</option>
            <option value="2">$1 MIL - $10 MIL</option>
            <option value="3">$10 MIL - $30 MIL</option>
            <option value="4">$30 MIL - $75 MIL</option>
            <option value="5">$75 MIL +</option>
        </select>
    </div>

    <div id="investment-real" class="">
        <div class="title flex justify-between items-center">
            <div>Projected Investment (Real Property)</div>
        </div>
        <select id="investment-real-selection" class="w-11/12 mx-auto">
            <option value="">Select Option</option>
            <option value="1">Up to $1 MIL</option>
            <option value="2">$1 MIL - $10 MIL</option>
            <option value="3">$10 MIL - $30 MIL</option>
            <option value="4">$30 MIL - $75 MIL</option>
            <option value="5">$75 MIL +</option>
        </select>
    </div>

    <div id="investment-personal" class="">
        <div class="title flex justify-between items-center">
            <div>Projected Investment (Personal Property)</div>
        </div>
        <select id="investment-personal-selection" class="w-11/12 mx-auto">
            <option value="">Select Option</option>
            <option value="1">Up to $1 MIL</option>
            <option value="2">$1 MIL - $10 MIL</option>
            <option value="3">$10 MIL - $30 MIL</option>
            <option value="4">$30 MIL - $75 MIL</option>
            <option value="5">$75 MIL +</option>
        </select>
    </div>

    <div id="benefit-cost-ratio" class="">
        <div class="title flex justify-between items-center">
            <div>Benefit Cost Ratio</div>
        </div>
        <select id="bcr-selection" class="w-11/12 mx-auto">
            <option value="">Select Option</option>
            <option value="1">Below 1.00</option>
            <option value="2">Above 1.00</option>
        </select>
    </div>

     <div id="county-district" class="">
        <div class="title flex justify-between items-center">
            <div>County Commission District</div>
        </div>
        <select id="county-district-selection" class="w-11/12 mx-auto">
            <option value="">Select Option</option>
            <option value="1">1</option>
            <option value="2">2</option>
            <option value="3">3</option>
            <option value="4">4</option>
            <option value="5">5</option>
            <option value="6">6</option>
            <option value="7">7</option>
            <option value="8">8</option>
            <option value="9">9</option>
            <option value="10">10</option>
            <option value="11">11</option>
            <option value="12">12</option>
            <option value="13">13</option>
        </select>
    </div>

    <div id="city-district" class="">
        <div class="title flex justify-between items-center">
            <div>City Council District</div>
        </div>
        <select id="city-district-selection" class="w-11/12 mx-auto">
            <option value="">Select Option</option>
            <option value="1">1</option>
            <option value="2">2</option>
            <option value="3">3</option>
            <option value="4">4</option>
            <option value="5">5</option>
            <option value="6">6</option>
            <option value="7">7</option>
        </select>
    </div>

    <div id="city-super-district" class="">
        <div class="title flex justify-between items-center">
            <div>City Council Super District</div>
        </div>
        <select id="city-super-district-selection" class="w-11/12 mx-auto">
            <option value="">Select Option</option>
            <option value="8">8</option>
            <option value="9">9</option>
        </select>
    </div>

    <div id="zipcode" class="">
        <div class="title flex justify-between items-center">
            <div>Zip Code</div>
        </div>
        <input id="zipcode-input" value="" type="text" class="w-11/12 mx-auto p-2 zip" placeholder="54545">
    </div>

    <div id="amended" class="">
        <div class="title flex justify-between items-center">
            <div>Amended PILOTs</div>
        </div>
        <select id="amended-selection" class="w-11/12 mx-auto">
            <option value="">Select Option</option>
            <option value="">Show All</option>
            <option value="Show">Only Show Amended</option>
            <option value="Hide">Don't Show Amended</option>
        </select>
    </div>

    <div id="new-market-tax-credit-district" class="">
        <div class="title flex justify-between items-center">
            <div>New Markets Tax Credit District</div>
        </div>
        <select id="nmtcd-selection" class="w-11/12 mx-auto">
            <option value="">Select Option</option>
            <option value="1">Yes</option>
            <option value="0">No</option>
        </select>
    </div>

</div>

<script>
pilots.sort((a, b) => {
    const a_year = new Date(a.DateApproved.substring(0, 10)).getFullYear();
    const b_year = new Date(b.DateApproved.substring(0, 10)).getFullYear();

    if (a_year < b_year) {
        return -1;
    } else if (a_year > b_year) {
        return 1;
    } else {
        return 0;
    }
});

pilots.reverse();

var _searched = pilots;
var _filtered = _searched;

function impactUpdate(){
    const total_jobs = _filtered.map(function (p) {
        return parseInt(p.TotalJobs);
    });

    const total_capital_investment = _filtered.map(function (p) {
        return parseInt(p.ProjectedCapitalInvestment);
    });

    const total_projected_spending = _filtered.map(function (p) {
        return parseInt(p.MWBE_LOSBSpendingConstruction) + parseInt(p.MWBE_LOSBSpendingOperations);
    });

    const avg_wage_per_job = _filtered.map(function (p) {
        return parseInt(p.WagesDirect) + parseInt(p.WagesIndirect);
    });

    const total_projected_tax_revenue = _filtered.map(function (p) {
        return parseInt(p.TotalNewTaxRevenues);
    });

    const total_projected_tax_abated = _filtered.map(function (p) {
        return parseInt(p.ProjectedTaxesAbatedCity) + parseInt(p.ProjectedTaxesAbatedCounty);
    });

    const total_number_of_pilots = _filtered.length;

    var _total_jobs;
    if (total_jobs.length > 0) { _total_jobs = total_jobs.reduce((a, b) => a + b)} else {_total_jobs = 0}

    var _total_capital_investment;
    if (total_capital_investment.length > 0) { _total_capital_investment = total_capital_investment.reduce((a, b) => a + b)} else {_total_capital_investment = 0}

    var _total_projected_spending;
    if (total_projected_spending.length > 0) { _total_projected_spending = total_projected_spending.reduce((a, b) => a + b)} else {_total_projected_spending = 0}

    var _avg_wage_per_job;
    if (avg_wage_per_job.length > 0) { _avg_wage_per_job = (avg_wage_per_job.reduce((a, b) => a + b)) / total_number_of_pilots} else {_avg_wage_per_job = 0}

    html = `
        <div class="w-full">
            <ul class="w-full flex flex-col">
                <li class="w-full grid grid-cols-12">
                    <div class="col-span-9 p-3 font-semibold">Total Jobs</div>
                    <div class="col-span-3 p-3">${_total_jobs}</div>
                </li>
                <li class="w-full grid grid-cols-12">
                    <div class="col-span-9 p-3 font-semibold">Total Capital Investment</div>
                    <div class="col-span-3 p-3">${formatter.format(_total_capital_investment)}</div>
                </li>
                <li class="w-full grid grid-cols-12">
                    <div class="col-span-9 p-3 font-semibold">Total Projected MWBE/LOSB Spending</div>
                    <div class="col-span-3 p-3">${formatter.format(_total_projected_spending)}</div>
                </li>
                <li class="w-full grid grid-cols-12">
                    <div class="col-span-9 p-3 font-semibold">Average Wage Per Job</div>
                    <div class="col-span-3 p-3">${formatter.format(_avg_wage_per_job)}</div>
                </li>`;

        var _total_projected_tax_revenue;
        if (total_projected_tax_revenue.length > 0) { _total_projected_tax_revenue = total_projected_tax_revenue.reduce((a, b) => a + b)} else {_total_projected_tax_revenue = 0}

        var _total_projected_tax_abated;
        if (total_projected_tax_abated.length > 0) { _total_projected_tax_abated = total_projected_tax_abated.reduce((a, b) => a + b)} else {_total_projected_tax_abated = 0}

        var _total_projected_cost_ratio;
        if (_total_projected_tax_abated != 0 && _total_projected_tax_revenue != 0) { _total_projected_cost_ratio = Math.round(100 * (total_projected_tax_revenue.reduce((a, b) => a + b)) / total_projected_tax_abated.reduce((a, b) => a + b)) / 100 } else {_total_projected_cost_ratio = 0}

        html += `
                <li class="w-full grid grid-cols-12">
                    <div class="col-span-9 p-3 font-semibold">Total Projected Tax Revenue</div>
                    <div class="col-span-3 p-3">${formatter.format(_total_projected_tax_revenue)}</div>
                </li>
                <li class="w-full grid grid-cols-12">
                    <div class="col-span-9 p-3 font-semibold">Total Projected Tax Abated</div>
                    <div class="col-span-3 p-3">${formatter.format(_total_projected_tax_abated)}</div>
                </li>
                <li class="w-full grid grid-cols-12">
                    <div class="col-span-9 p-3 font-semibold">Total Projected Cost Ratio</div>
                    <div class="col-span-3 p-3">${_total_projected_cost_ratio}</div>
                </li>
            </ul>
        </div>`;

    document.getElementById('total_results').innerHTML = html;
}
impactUpdate();

var base_html = `
<div id="pilot_list" class="flex flex-col">
  <div class="overflow-x-auto">
    <div class="inline-block min-w-full">
      <div class="overflow-x-auto">
        <table class="max-w-screen-xl mx-auto">
          <thead class="edge-bg-dark text-white diag">
            <tr>
              <th scope="col" class="px-6 py-4 text-left">
                Date Approved
              </th>
              <th scope="col" class="px-6 py-4 text-left max-w-xs">
                Company Name
              </th>
              <th scope="col" class="px-6 py-4 text-left">
                Total Jobs
              </th>
              <th scope="col" class="px-6 py-4 text-left">
                Projected Investment
              </th>
              <th scope="col" class="px-6 py-4 text-left">
                Projected MWBE/LOSB Spending
              </th>
              <th scope="col" class="px-6 py-4 text-left">
                Projected Benefit to Cost Ratio
              </th>
            </tr>
          </thead>
          <tbody class="">`;

function Filters(){
    this.date_approved;
    this.date_closed;
    this.project_type;
    this.project_status;
    this.industry_classification;
    this.retained_jobs;
    this.new_jobs;
    this.total_jobs;
    this.county_district;
    this.city_district;
    this.city_super_district;
    this.mwbe_losb;
    this.payroll_new;
    this.payroll_retained;
    this.projected_investment;
    this.investment_real;
    this.investment_personal;
    this.benefit_cost_ratio;
    this.zipcode;
    this.amended;
    this.new_market_tax_credit_district;
}

var filter_util = new Filters();
var html = base_html;

function getFilters(){
    filter_util.date_approved = $('#date-approved-selection').val();
    filter_util.date_closed = $('#date-closed-selection').val();
    filter_util.project_type = $('#project-type-selection').val();
    filter_util.project_status = $('#project-status-selection').val();
    filter_util.industry_classification = $('#industry-classification-selection').val();
    filter_util.retained_jobs = $('#retained-jobs-selection').val();
    filter_util.new_jobs = $('#new-jobs-selection').val();
    filter_util.total_jobs = $('#total-jobs-selection').val();
    filter_util.county_district = $('#county-district-selection').val();
    filter_util.city_district = $('#city-district-selection').val();
    filter_util.city_super_district = $('#city-super-district-selection').val();
    filter_util.mwbe_losb = $('#mwbe-losb-selection').val();
    filter_util.payroll_new = $('#payroll-new-selection').val();
    filter_util.payroll_retained = $('#payroll-retained-selection').val();
    filter_util.projected_investment = $('#projected-investment-selection').val();
    filter_util.investment_real = $('#investment-real-selection').val();
    filter_util.investment_personal = $('#investment-personal-selection').val();
    filter_util.benefit_cost_ratio = $('#bcr-selection').val();
    filter_util.zipcode = $('#zipcode-input').val();
    filter_util.amended = $('#amended-selection').val();
    filter_util.new_market_tax_credit_district = $('#nmtcd-selection').val();
}

function sortPilotList(){
    html = base_html;
    getFilters();

    var temp_list_filtered = [];

    console.log(filter_util);

    for (p of _searched){
        const DateApproved = checkPilotDateApproved(p);
        if (!DateApproved) { continue; }
        if (!checkPilotDateClosed(p)){ continue; }
        if (!checkProjectType(p)) { continue; }
        if (!checkProjectStatus(p)) { continue; }
        if (!checkIndustryClassification(p)) { continue; }
        if (!checkRetainedJobs(p)) { continue; }
        if (!checkNewJobs(p)) { continue; }
        if (!checkTotalJobs(p)) { continue; }
        if (!checkCountyDistrict(p)) { continue; }
        if (!checkCityDistrict(p)) { continue; }
        if (!checkCitySuperDistrict(p)) { continue; }
        if (!checkMWBE_LOSB(p)) { continue; }
        if (!checkPayrollNew(p)) { continue; }
        if (!checkPayrollRetained(p)) { continue; }
        if (!checkProjectedInvestment(p)) { continue; }
        if (!checkInvestmentReal(p)) { continue; }
        if (!checkInvestmentPersonal(p)) { continue; }
        if (!checkBenefitCostRatio(p)) { continue; }
        if (!checkZipcode(p)) { continue; }
        if (!checkAmended(p)) { continue; }
        if (!checkNewMarketTaxCreditDistrict(p)) { continue; }

        temp_list_filtered.push(p);

        html += `
        <tr class="row-b1">
                <td class="px-6 py-4">${DateApproved}</td>
                <td class="px-6 py-4 edge-link-gray max-w-xs">
                    <a class="edge-link-red" href="${URL + p.Id}">
                        ${p.CompanyName}
                    </a>
                </td>
                <td class="px-6 py-4">${p.TotalJobs}</td>
                <td class="px-6 py-4">${formatter.format(p.ProjectedCapitalInvestment)}</td>
                <td class="px-6 py-4">${formatter.format(parseInt(p.MWBE_LOSBSpendingConstruction) + parseInt(p.MWBE_LOSBSpendingOperations))}</td>
                <td class="px-6 py-4">${p.BenefitCostRatio}</td>                
            </tr>`;
    }
    
    html += `</tbody>
        </table>
      </div>
    </div>
  </div>
</div>`;

    if (html == base_html || temp_list_filtered.length == 0 || _searched.length == 0){
        html = `<div class="edge-wrapper px-6 py-4">No Results Found</div>`;
    }

    document.getElementById('edge_pilots').innerHTML = html;
    if (temp_list_filtered.length != 0){
        _filtered = temp_list_filtered;
        impactUpdate();
    }
}

function checkPilotDateApproved(_p){
    const year = new Date(_p.DateApproved.substring(0, 10)).getFullYear();

    if (year == filter_util.date_approved || filter_util.date_approved == ""){
        const day = new Date(_p.DateApproved.substring(0, 10)).getDate();
        const month = new Date(_p.DateApproved.substring(0, 10)).getMonth();

        return `${months[month]} ${day}, ${year}`;
    } else {
        return false;
    }
}
function checkPilotDateClosed(_p){
    const year = new Date(_p.DateClosedEffectiveDate.substring(0, 10)).getFullYear();

    if (year == filter_util.date_closed || filter_util.date_closed == ""){
        return true;
    } else {
        return false;
    }
}
function checkProjectType(_p){
    if (_p.PilotType == filter_util.project_type || filter_util.project_type == ""){
        return true;
    } else {
        return false;
    }
}
function checkProjectStatus(_p){
    if (_p.PilotStatus == filter_util.project_status || filter_util.project_status == ""){
        return true;
    } else {
        return false;
    }
}
function checkIndustryClassification(_p){
    if (_p.ProjectType == filter_util.industry_classification || filter_util.industry_classification == ""){
        return true;
    } else {
        return false;
    }
}
function checkRetainedJobs(_p){
    var rj = parseInt(_p.ProjectedRetainedJobs);

    if (filter_util.retained_jobs == 1){
        if (rj > 0 && rj < 26){
            return true;
        } else {
            return false;
        }
    } else if (filter_util.retained_jobs == 2){
        if (rj > 24 && rj < 101){
            return true;
        } else {
            return false;
        }
    } else if (filter_util.retained_jobs == 3){
        if (rj > 100){
            return true;
        } else {
            return false;
        }
    } else if (filter_util.retained_jobs == ""){
        return true;
    } else {
        return false;
    }
}
function checkNewJobs(_p){
    var nj = parseInt(_p.ProjectedNewJobs);

    if (filter_util.new_jobs == 1){
        if (nj > 0 && nj < 26){
            return true;
        } else {
            return false;
        }
    } else if (filter_util.new_jobs == 2){
        if (nj > 24 && nj < 101){
            return true;
        } else {
            return false;
        }
    } else if (filter_util.new_jobs == 3){
        if (nj > 100){
            return true;
        } else {
            return false;
        }
    } else if (filter_util.new_jobs == ""){
        return true;
    } else {
        return false;
    }
}
function checkTotalJobs(_p){
    var tj = parseInt(_p.TotalJobs);

    if (filter_util.total_jobs == 1){
        if (tj > 0 && tj < 26){
            return true;
        } else {
            return false;
        }
    } else if (filter_util.total_jobs == 2){
        if (tj > 24 && tj < 101){
            return true;
        } else {
            return false;
        }
    } else if (filter_util.total_jobs == 3){
        if (tj > 100){
            return true;
        } else {
            return false;
        }
    } else if (filter_util.total_jobs == ""){
        return true;
    } else {
        return false;
    }
}
function checkCountyDistrict(_p){
   if (parseInt(_p.CountyCommissionDistrict) == filter_util.county_district || filter_util.county_district == ""){
        return true;
    } else {
        return false;
    }
}
function checkCityDistrict(_p){
    if (parseInt(_p.CityCouncilDistrict) == filter_util.city_district || filter_util.city_district == ""){
        return true;
    } else {
        return false;
    }
}
function checkCitySuperDistrict(_p){
    if (parseInt(_p.CityCouncilSuperDistrict) == filter_util.city_super_district || filter_util.city_super_district == ""){
        return true;
    } else {
        return false;
    }
}
function checkMWBE_LOSB(_p){
    var m_l_total = parseInt(_p.MWBE_LOSBSpendingConstruction) + parseInt(_p.MWBE_LOSBSpendingOperations);
    if (filter_util.mwbe_losb == 1){
        if (m_l_total > 0 && m_l_total < 1000001){
            return true;
        } else {
            return false;
        }
    } else if (filter_util.mwbe_losb == 2){
        if (m_l_total > 1000000 && m_l_total < 5000001){
            return true;
        } else {
            return false;
        }
    } else if (filter_util.mwbe_losb == 3){
        if (m_l_total > 5000000 && m_l_total < 10000001){
            return true;
        } else {
            return false;
        }
    } else if (filter_util.mwbe_losb == 4){
        if (m_l_total > 10000000 && m_l_total < 20000001){
            return true;
        } else {
            return false;
        }
    } else if (filter_util.mwbe_losb == 5){
        if (m_l_total > 20000000){
            return true;
        } else {
            return false;
        }
    } else if (filter_util.mwbe_losb == ""){
        return true;
    } else {
        return false;
    }
}
function checkPayrollNew(_p){
    var p_total = parseInt(_p.ProjectedAveragePayrollOfNewJobs);
    if (filter_util.payroll_new == 1){
        if (p_total > 20000 && p_total < 30001){
            return true;
        } else {
            return false;
        }
    } else if (filter_util.payroll_new == 2){
        if (p_total > 30000 && p_total < 60001){
            return true;
        } else {
            return false;
        }
    } else if (filter_util.payroll_new == 3){
        if (p_total > 60000){
            return true;
        } else {
            return false;
        }
    } else if (filter_util.payroll_new == ""){
        return true;
    } else {
        return false;
    }
}
function checkPayrollRetained(_p){
    var p_total = parseInt(_p.ProjectedAveragePayrollOfRetainedJobs);
    if (filter_util.payroll_retained == 1){
        if (p_total > 20000 && p_total < 30001){
            return true;
        } else {
            return false;
        }
    } else if (filter_util.payroll_retained == 2){
        if (p_total > 30000 && p_total < 60001){
            return true;
        } else {
            return false;
        }
    } else if (filter_util.payroll_retained == 3){
        if (p_total > 60000){
            return true;
        } else {
            return false;
        }
    } else if (filter_util.payroll_retained == ""){
        return true;
    } else {
        return false;
    }
}
function checkProjectedInvestment(_p){
    var p_total = parseInt(_p.TotalCapitalInvestment);
    if (filter_util.projected_investment == 1){
        if (p_total > 0 && p_total < 1000001){
            return true;
        } else {
            return false;
        }
    } else if (filter_util.projected_investment == 2){
        if (p_total > 1000000 && p_total < 10000001){
            return true;
        } else {
            return false;
        }
    } else if (filter_util.projected_investment == 3){
        if (p_total > 10000000 && p_total < 30000001){
            return true;
        } else {
            return false;
        }
    } else if (filter_util.projected_investment == 4){
        if (p_total > 30000000 && p_total < 75000001){
            return true;
        } else {
            return false;
        }
    } else if (filter_util.projected_investment == 5){
        if (p_total > 75000000){
            return true;
        } else {
            return false;
        }
    } else if (filter_util.projected_investment == ""){
        return true;
    } else {
        return false;
    }
}
function checkInvestmentReal(_p){
    var p_total = parseInt(_p.RealPropertyInvestment);
    if (filter_util.investment_real == 1){
        if (p_total > 0 && p_total < 1000001){
            return true;
        } else {
            return false;
        }
    } else if (filter_util.investment_real == 2){
        if (p_total > 1000000 && p_total < 10000001){
            return true;
        } else {
            return false;
        }
    } else if (filter_util.investment_real == 3){
        if (p_total > 10000000 && p_total < 30000001){
            return true;
        } else {
            return false;
        }
    } else if (filter_util.investment_real == 4){
        if (p_total > 30000000 && p_total < 75000001){
            return true;
        } else {
            return false;
        }
    } else if (filter_util.investment_real == 5){
        if (p_total > 75000000){
            return true;
        } else {
            return false;
        }
    } else if (filter_util.investment_real == ""){
        return true;
    } else {
        return false;
    }
}
function checkInvestmentPersonal(_p){
    var p_total = parseInt(_p.PersonalPropertyInvestment);
    if (filter_util.investment_personal == 1){
        if (p_total > 0 && p_total < 1000001){
            return true;
        } else {
            return false;
        }
    } else if (filter_util.investment_personal == 2){
        if (p_total > 1000000 && p_total < 10000001){
            return true;
        } else {
            return false;
        }
    } else if (filter_util.investment_personal == 3){
        if (p_total > 10000000 && p_total < 30000001){
            return true;
        } else {
            return false;
        }
    } else if (filter_util.investment_personal == 4){
        if (p_total > 30000000 && p_total < 75000001){
            return true;
        } else {
            return false;
        }
    } else if (filter_util.investment_personal == 5){
        if (p_total > 75000000){
            return true;
        } else {
            return false;
        }
    } else if (filter_util.investment_personal == ""){
        return true;
    } else {
        return false;
    }
}
function checkBenefitCostRatio(_p){
    var bcr = parseFloat(_p.BenefitCostRatio);
    if (filter_util.benefit_cost_ratio == 1){
        if (bcr < 1.01){
            return true;
        } else {
            return false;
        }
    } else if (filter_util.benefit_cost_ratio == 2){
        if (bcr > 1){
            return true;
        } else {
            return false;
        }
    } else if (filter_util.benefit_cost_ratio == ""){
        return true;
    } else {
        return false;
    }
}
function checkZipcode(_p){
    if (filter_util.zipcode == ""){
        return true;
    } else {
        if (_p.ZipCode.includes(filter_util.zipcode)){
            return true;
        } else {
            return false;
        }
    }
}
function checkAmended(_p){
    if (filter_util.amended == ""){
        return true;
    } else if (filter_util.amended == "Show"){
        if (_p.DateAmended01 != "0000-00-00"){
            return true;
        } else {
            return false;
        }
    } else if (filter_util.amended == "Hide"){
        if (_p.DateAmended01 == "0000-00-00"){
            return true;
        } else {
            return false;
        }
    } else {
        return false;
    }
}
function checkNewMarketTaxCreditDistrict(_p){
    var d = parseInt(_p.CommunityReinvestmentCredit);
    if (filter_util.new_market_tax_credit_district == ""){
        return true;
    } else {
        if (filter_util.new_market_tax_credit_district == 1){
            if (d > 1){
                return true;
            } else {
                return false;
            }
        } else if (filter_util.new_market_tax_credit_district == 0){
            if (d == 0){
                return true;
            } else {
                return false;
            }
        }
    }
}

sortPilotList();
$('#date-approved-selection').change(() => sortPilotList());
$('#date-closed-selection').change(() => sortPilotList());
$('#project-type-selection').change(() => sortPilotList());
$('#project-status-selection').change(() => sortPilotList());
$('#industry-classification-selection').change(() => sortPilotList());
$('#retained-jobs-selection').change(() => sortPilotList());
$('#new-jobs-selection').change(() => sortPilotList());
$('#total-jobs-selection').change(() => sortPilotList());
$('#county-district-selection').change(() => sortPilotList());
$('#city-district-selection').change(() => sortPilotList());
$('#city-super-district-selection').change(() => sortPilotList());
$('#mwbe-losb-selection').change(() => sortPilotList());
$('#payroll-new-selection').change(() => sortPilotList());
$('#payroll-retained-selection').change(() => sortPilotList());
$('#projected-investment-selection').change(() => sortPilotList());
$('#investment-real-selection').change(() => sortPilotList());
$('#investment-personal-selection').change(() => sortPilotList());
$('#bcr-selection').change(() => sortPilotList());
$('#zipcode-input').keyup(() => sortPilotList());
$('#amended-selection').change(() => sortPilotList());
$('#nmtcd-selection').change(() => sortPilotList());

$("#search-button").click(function(){
    if ($("#name-search").val() == ""){
        _searched = pilots;
    } else {
        var _temp_list= [];
        for (p in pilots){
            if (pilots[p].CompanyName.toLowerCase().includes($("#name-search").val().toLowerCase())){
                _temp_list.push(pilots[p]);
            }
        }
        _searched = _temp_list;
        _filtered = _searched;
    }
    sortPilotList();
    impactUpdate();

    if ($(window).scrollTop() < 550 && $("#name-search").val() != "") {
        $("html").animate({scrollTop: 550}, 400);
    }
});

var toggle = "static";

$("#filter-tab").click(function(){
    var t = $(this).find('span');
    console.log();
    if ( t.html().trim() == "arrow_right" ) {
        $(this).find('span').html('arrow_left');
        toggle = "absolute";
        $("#filter-selection-list").animate(
            { right: "+=300" }, 400, function() {
            // Animation complete.
        });
        $( this ).animate(
            { right: "+=0", top: "-=0" },
            {
                step: () => {
                    $('#filter-selection-list').css('box-shadow', '5px 5px 5px rgba(0,0,0,.25)');
                }
            }, 200, function() {
            // Animation complete.
        });
        if ($(window).scrollTop() < 550) {
            $("html").animate({scrollTop: 550}, 400);
        }
    } else if ( t.html().trim() == "arrow_left" ) {
        $(this).find('span').html('arrow_right');
        toggle = "static";
        $("#filter-selection-list").animate(
            { right: "-=300" }, 400, function() {
            // Animation complete.
        });
        $( this ).animate(
            { right: "-=0", top: "+=0" },
            {
                step: () => {
                    $('#filter-selection-list').css('box-shadow', '5px 5px 5px rgba(0,0,0,0)');
                }
            }, 200, function() {
            // Animation complete.
        });
    }
});

$(document).ready(function(){
    $("#filter-tab").css("top",$("#data-diag").position().top + "px");
    $("#filter-selection-list").css("top",$("#data-diag").position().top + 20 + "px");
});

$(window).scroll(function(){
  if ($(window).scrollTop() > ($("#filter-tab").position().top - 100)){
    $("#filter-tab").css("position","fixed");
    $("#filter-selection-list").css("position","fixed");
    $("#filter-tab").css("top","40px");
    $("#filter-selection-list").css("top","60px");
  } else {
    $("#filter-tab").css("position","absolute");
    $("#filter-selection-list").css("position","absolute");
    $("#filter-tab").css("top",$("#data-diag").position().top + "px");
    $("#filter-selection-list").css("top",$("#data-diag").position().top + 20 + "px");
  }

  if ($(window).scrollTop() < 550) {
    $("#filter-tab").css("position","absolute");
    $("#filter-selection-list").css("position",toggle);
    $("#filter-tab").css("top",$("#data-diag").position().top + "px");
    $("#filter-selection-list").css("top",$("#data-diag").position().top + 20 + "px");
  }
});

$(window).resize(function(){
    if ($(window).scrollTop() < 550) {
        $("#filter-tab").css("position","absolute");
        $("#filter-selection-list").css("position",toggle);
        $("#filter-tab").css("top",$("#data-diag").position().top + "px");
        $("#filter-selection-list").css("top",$("#data-diag").position().top + 20 + "px");
    }
});
</script>